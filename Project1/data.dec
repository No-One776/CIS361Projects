hello world
this is my test of the decryptor for system programming languages project number one
this is a test file for testing the decryption after have this file encrypted first

Each film opens with the static blue text, "A long time ago in a galaxy far, far away....", followed by the Star Wars logo shrinking in front of a field of stars. Initially the logo's extremities are beyond the edge of the frame. While the logo is retreating, the "crawl" text begins, starting with film's episode number and subtitle (with the exception of the original release of Star Wars – see below), and followed by a three-paragraph prologue to the film. The text scrolls up and away from the bottom of the screen towards a vanishing point above the top of the frame in a perspective projection. Each version of the opening crawl ends with a four-dot ellipsis, except for Return of the Jedi which has a three-dot ellipsis. When the text has nearly reached the vanishing point, it fades out, and the camera tilts down (or, in the case of Episode II: Attack of the Clones, up) and the film begins.[1]

Two typefaces are used in the text, both in yellow: News Gothic for the episode number and main body of the text, and Univers Ultra Condensed Light for the title of the film.[2] Several words are in all-capital letters to stress their importance: "DEATH STAR" in A New Hope, "GALACTIC EMPIRE" in Return of the Jedi, "ARMY OF THE REPUBLIC" in Attack of the Clones, and "FIRST ORDER", "REPUBLIC" and "RESISTANCE" in The Force Awakens (which is, until now, the only film in the saga to include more than one phrase in all-capital letters and the only odd-numbered film to have at least a phrase in all-capital letters). Each line of the text spans the width of the screen when it enters from the bottom. In the "fullscreen" (4:3 aspect ratio for standard-definition television) versions of the films, the full lines of text are cut off on the sides until they have scrolled further onto the screen. As a result, by the time the full lines are visible, the text is much smaller and harder to read. In addition, the viewer also has less time to read it.

The animated Star Wars: The Clone Wars film is, so far, the only theatrically released Star Wars film that does not feature an opening crawl, but instead features a narration of the past events over several clips. The narration (provided by Tom Kane) is meant to evoke World War II newsreels.


One question here is how to compare two lists of letter frequencies to find the best match. You can measure the difference between the two lists; for this, use the sum of the squares of the differences of the corresponding elements in the lists. If you minimize this sum by trying different rotations, you are doing what is called a least squares fit. Note that each letter frequency is the quotient of the number of times that letter was seen divided by the total number of letters examined.

Since each function above represents a step for the program to do its work, you can develop the program in an incremental fashion; that is, define one function, test it, and if it works correctly, move on to the next function. A minor error may produce a quite different result for a program like this. Incremental development is an effective way to ensure a correct program.

In addition to the file LetFreq.txt, you can find the program cipher.c from the instructor’s website, which is provided for you to prepare your test data. You should use it to generate an encrypted file from a file that you create for testing purposes, run your program with the encrypted file as input, and then compare the output file of your program to the original file. Since such a process involves multiple command lines and you have to run them as often as you need, it would be much convenient to define a makefile and use command make to automate your testing process (a sample makefile can be found in the project folder). Test your program twice, one with a file that contains a small paragraph and the other with a file that contains more than a page of text. Use Linux command diff –s originalTextFile resultingTextFile to see if they are identical. Also add this command line to your makefile so as to perform your test and compare the result automatically.

You should use Git to manage your source code. When your program works correctly, get a hardcopy of the source code, the makefile, a Git log output, and two sets of test data as well as program output (including the original file, the encrypted file, and the output file of your program) for submission.
